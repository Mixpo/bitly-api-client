
[0.8.0]

* BREAKING CHANGES: removed some calls that were deprecated by bit.ly
* merged PR#6

[0.7.2]
* FIX: Issue#3 Link to maven repo was wrong
* FIX: Issue#4 Example in Readme was wrong
* FIX: Response Data sent by bit.ly changed for LinkEncodersCountIntegrationTest, updated to correct string

[0.7.1]

* FIX: Issue#2 (https://github.com/stackmagic/bitly-api-client/issues/2) where a gson exception was thrown on error responses from bitly. Just checking the status field for a value of 200 would break UserLinkSaveIntegrationTest where a 304 is returned along with a valid data field. So we first try to deserialize and only in case of error we'll do a partial deserialize. There's a new field deserialize_error in the response to indicate that the data field will be null as a result of an error

[0.7.0]

* IMPROVEMENT: upgrade libraries to latest versions

[0.6.2]

* FIX: resource leak in AccessTokenUtil (used for tests only but still)

[0.6.1]

* IMPROVEMENT: log the responses received at TRACE level in net.swisstech.bitly.builder.Request to debug Issue #1

[0.6.0]

* IMPROVEMENT: Expand                    Refactoring and Javadoc (partially copied directly from bitly)
* IMPROVEMENT: Info                      Refactoring and Javadoc (partially copied directly from bitly)
* IMPROVEMENT: LinkLookup                Refactoring and Javadoc (partially copied directly from bitly)
* IMPROVEMENT: Shorten                   Refactoring and Javadoc (partially copied directly from bitly)
* IMPROVEMENT: UserLinkEdit              Refactoring and Javadoc (partially copied directly from bitly)
* IMPROVEMENT: UserLinkLookup            Refactoring and Javadoc (partially copied directly from bitly)
* IMPROVEMENT: UserLinkSave              Refactoring and Javadoc (partially copied directly from bitly)
* IMPROVEMENT: LinkClicksExpanded        Refactoring and Javadoc (partially copied directly from bitly)
* IMPROVEMENT: LinkClicksRolledUp        Refactoring and Javadoc (partially copied directly from bitly)
* IMPROVEMENT: LinkSharesExpanded        Refactoring and Javadoc (partially copied directly from bitly)
* IMPROVEMENT: LinkSharesRolledUp        Refactoring and Javadoc (partially copied directly from bitly)
* IMPROVEMENT: UserLinkHistory           Refactoring and Javadoc (partially copied directly from bitly)
* IMPROVEMENT: UserLinkHistory Now can also deal with share information
* IMPROVEMENT: Switch to SLF4J (slf4j-api is a hard dependency, the backends in the pom are only used for the tests -- feel free to use your own!)
* IMPROVEMENT: UserNetworkHistory Refactoring and Javadoc (partially copied directly from bitly)
* IMPROVEMENT: UserTrackingDomainList    Refactoring and Javadoc (partially copied directly from bitly)
* IMPROVEMENT: UserClicksExpanded        Refactoring and Javadoc (partially copied directly from bitly)
* IMPROVEMENT: UserClicksRolledUp        Refactoring and Javadoc (partially copied directly from bitly)
* IMPROVEMENT: UserShortenCountsExpanded Refactoring and Javadoc (partially copied directly from bitly)
* IMPROVEMENT: UserShortenCountsRolledUp Refactoring and Javadoc (partially copied directly from bitly)
* IMPROVEMENT: UserCountriesRolledUp     Refactoring and Javadoc (partially copied directly from bitly)
* IMPROVEMENT: UserCountriesExpanded     (does not exist - api always behaves as rollup=true)
* IMPROVEMENT: UserShareCountsExpanded   Refactoring and Javadoc (partially copied directly from bitly)
* IMPROVEMENT: UserShareCountsRolledUp   Refactoring and Javadoc (partially copied directly from bitly)
* IMPROVEMENT: UserReferrersExpanded     Refactoring and Javadoc (partially copied directly from bitly) -- not done yet, this one is a bit of a mess with the different behaviour when the unit parameter is missing. always set a unit parameter in the metricsrequest base class? there may be more requests like this one.
* IMPROVEMENT: UserPopularLinks          Refactoring and Javadoc (partially copied directly from bitly)
* IMPROVEMENT: UserReferringDomains      Refactoring and Javadoc (partially copied directly from bitly)

[0.5.0]

more or less feature complete. most metrics are there with an expanded variant, the rolledup one needs a closer look and once I've figured out how this stuff actually works I'll add it too but for the moment this is a pretty usable state right now.

* FEATURE: UserClicks
* FEATURE: UserCountries
* FEATURE: UserPopularLinks
* FEATURE: UserReferrers
* FEATURE: UserReferringDomains
* FEATURE: UserShareCounts
* FEATURE: UserShareCountsByShareType
* FEATURE: UserShortenCounts

[0.0.7]

* REFACTORING: LinkHistory => UserLinkHistory
* REFACTORING: builder names, to string, lots more
* REFACTORING: common base class for requests that get metrics

[0.0.6]

* FEATURE: UserInfo
* FEATURE: UserLinkHistory
* FEATURE: UserNetworkHistory
* FEATURE: UserTrackingDomainList

[0.0.5]

* FEATURE: LinkClicks
* FEATURE: LinkCountries
* FEATURE: LinkEncodersCount
* FEATURE: LinkReferrers
* FEATURE: LinkReferringDomains
* FEATURE: LinkShares (this isn't completely documented by bit.ly and seems to
  return only partial data)

[0.0.4]

* FEATURE: LinkLookup
* FEATURE: UserLinkLookup
* FEATURE: UserLinkSave

[0.0.3-SNAPSHOT]

* FEATURE: Shorten request
* add changelog

[0.0.2-SNAPSHOT]

* add README.textile
* split unit and integration tests

[0.0.1-SNAPSHOT]

* FEATURE: Expand request
* FEATURE: Info request
